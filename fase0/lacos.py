# La√ßos (ou loops) s√£o usados no c√≥digo quando voc√™ precisa repetir uma a√ß√£o
""" 
Imagine que um mineiro tenha um pote cheio de p√£es de queijo,
Ele abre o pote, pega um p√£o de queijo e come. E faz isso de novo, e de novo...
Imagine ter de escrever isso manualmente.
Por sorte podemos usar um loop, enquanto houver p√£es de queijo, ele continua comendo!
"""
# while
brazilian_cheese_bread = 10

while(brazilian_cheese_bread >= 1):
    brazilian_cheese_bread -= 1
    if brazilian_cheese_bread > 0:
        print("O mineiro comeu um p√£o de queijo, ainda restam", brazilian_cheese_bread)
else:
    print("O mineiro comeu o √∫ltimo p√£o de queijo\nL√° se foram os p√£es de queijo! =(\n")
"""
‚ö†Ô∏è Deve-se tomar cuidado para n√£o criar um loop infinito
se ao inv√©s de subtrair fosse somada um p√£o de queijo
o programa rodaria infinitamente!!
"""
    
""" 
Imagine um aficionado por natureza, que tenha um quintal grande,
Enquanto houver espa√ßo ele planta uma √°rvore. E faz isso de novo, e de novo...
Mas seu quintal tem um limite, h√° espa√ßo para no m√°ximo 6 √°rvores.
Vamos plantar √°rvores? 
"""
# for
for tree in range(1, 7):
    print(f"Uma √°rvore foi plantada, no quintal h√° {tree} √°rvore(s) plantada(s)")
    # f"string {variavel}" - f-strings incluem vari√°veis dentro de strings de forma pr√°tica
else:
    print("O quintal est√° lindo e lotado, n√£o cabem mais √°rvores!\n")

# Nested Loops(La√ßos aninhados)
""" 
Imagine que voc√™ quer se desafiar ao m√°ximo em um treino de calistenia
e para isso voc√™ decide criar um desafio de circuito variando exerc√≠cios
e o numero de repeti√ßoes
"""
exercises = ['Muscle-ups', 'Handstand push-ups', "L-sits", "Pistol Squats"]

for reps in range(1, 6):
    for move in exercises:
        print(f"Fa√ßa {reps} {move}.")
    if reps < 5:
        print(f"descanse {reps} minuto(s).\n")
    else: 
        print("Parab√©ns voc√™ concluiu o treinamento!\n")

# Loop Control Statments
"""
Vamos supor que voc√™ quer atingir uma meta espec√≠fica de flex√µes 
primeiro voc√™ define a meta e depois faz uma,
caso consiga fazer uma flex√£o voc√™ faz a pr√≥xima 
caso n√£o consiga voc√™ para.
"""
push_ups = 1
goals = int(input("Digite a sua meta: "))

print('Vamos l√°! fa√ßa uma flex√£o')
for i in range(2, (goals + 1)):
    keep_going = input('Voc√™ consegue continuar? (sim/nao)\n')
    if keep_going == 'sim':
        push_ups += 1
        print(f"voc√™ fez {push_ups} flex√µes!")
        continue # Continue statement
    elif keep_going == 'nao':
        print(f"voc√™ fez {push_ups} flex√µes, descanse e tente mais tarde!")
        break # Break statement
    else:
        print('Entrada inv√°lida, digite apenas sim ou nao')
        pass # Pass statement
        
if push_ups == goals:
    print('Parab√©ns, voc√™ atingiu sua meta!')

# üîó Refer√™ncias:
# https://www.geeksforgeeks.org/loops-in-python/
